{"version":3,"sources":["components/Header.js","components/Footer.js","components/AppErrorBoundary.js","pages/home/Home.js","pages/code-splitting/Demo1.js","pages/code-splitting/Demo2.js","pages/code-splitting/CodeSplitting.js","pages/context/Context.js","pages/error-boundaries/Demo1.js","components/ComponentErrorBoundary.js","pages/error-boundaries/BuggyButton.js","pages/error-boundaries/Demo2.js","pages/error-boundaries/Demo3.js","pages/error-boundaries/Demo4.js","pages/error-boundaries/BuggyConstructor.js","pages/error-boundaries/Demo5.js","pages/error-boundaries/ErrorBoundaries.js","pages/function-as-child-components/FunctionAsChildComponents.js","pages/higher-order-components/Button.js","pages/higher-order-components/CounterResults.js","util/getDisplayName.js","pages/higher-order-components/logUpdates.js","pages/higher-order-components/Counter.js","pages/higher-order-components/Demo1.js","pages/higher-order-components/Demo2a.js","pages/higher-order-components/ColoredText.js","pages/higher-order-components/Demo2b.js","pages/higher-order-components/Demo2.js","pages/higher-order-components/BoringComponent.js","pages/higher-order-components/withAddedProps.js","pages/higher-order-components/Demo3.js","pages/higher-order-components/HigherOrderComponents.js","pages/hooks/Demo1.js","pages/hooks/Demo2.js","pages/hooks/Demo3.js","pages/hooks/Demo4.js","pages/hooks/Hooks.js","pages/lifecycle-methods/Introduction.js","pages/lifecycle-methods/Demo1Child.js","pages/lifecycle-methods/Demo1Parent.js","pages/lifecycle-methods/Demo1.js","pages/lifecycle-methods/Demo2.js","pages/lifecycle-methods/LifecycleMethods.js","pages/portals/Portals.js","pages/refs/Demo1.js","pages/refs/Demo2Child.js","pages/refs/Demo2Parent.js","pages/refs/Demo2.js","pages/refs/Demo3Child.js","pages/refs/Demo3Parent.js","pages/refs/Demo3.js","pages/refs/Refs.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","Footer","href","AppErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","children","Component","HomePage","ComponentToLazyLoad","lazy","__webpack_require__","e","then","bind","Demo1","react","fallback","Demo2","type","onClick","handleDefaultClick","handleNamedClick","module","default","alertAboutNamedExport","CodeSplittingPage","code_splitting_Demo1","code_splitting_Demo2","ContextPage","hasError","throwErrorViaRender","setState","throwErrorViaClickHandlerIncorrectly","Error","throwErrorViaClickHandlerCorrectly","ComponentErrorBoundary","errorInfo","console","log","toString","componentStack","BuggyButton","throwError","src_components_ComponentErrorBoundary","error_boundaries_BuggyButton","Demo3","counter","incrementCounter","prevState","Demo4","map","element","BuggyConstructor","Demo5","showChild","toggleShowChild","error_boundaries_BuggyConstructor","ErrorBoundariesPage","error_boundaries_Demo1","error_boundaries_Demo2","error_boundaries_Demo3","error_boundaries_Demo4","error_boundaries_Demo5","FunctionAsChildComponentsPage","Button","_ref","buttonText","clickHandler","buttonType","additionalClasses","concat","CounterResults","counterValue","getDisplayName","WrappedComponent","displayName","name","logUpdates","LogUpdates","_Component","apply","arguments","inherits","createClass","key","value","prevProps","WrappedCounterResults","Counter","assertThisInitialized","useHOC","higher_order_components_Button","higher_order_components_CounterResults","higher_order_components_Counter","WrappedColoredText","textColor","style","color","Demo2a","handleTextInputChange","target","htmlFor","id","onChange","WrappedButton","Demo2b","buttonIsOn","toggleValue","higher_order_components_Demo2a","higher_order_components_Demo2b","BoringComponent","secretToLife","sendAlert","withAddedProps","WrappedBoringComponent","WithAddedProps","_getPrototypeOf2","_len","length","args","Array","_key","assign","window","alert","higher_order_components_BoringComponent","HigherOrderComponentsPage","higher_order_components_Demo1","higher_order_components_Demo2","higher_order_components_Demo3","_useState","useState","_useState2","slicedToArray","count","setCount","_useState3","_useState4","setName","prevCount","useEffect","document","title","myInterval","setInterval","clearInterval","initialState","firstName","lastName","favoriteColor","registrationReducer","undefined","action","objectSpread","payload","_useReducer","useReducer","_useReducer2","dispatch","onSubmit","preventDefault","disabled","HooksPage","hooks_Demo1","hooks_Demo2","hooks_Demo3","hooks_Demo4","Introduction","Demo1Child","nextProps","nextState","timestamp","Date","getMilliseconds","snapshot","Demo1Parent","parentContainerRef","createRef","toggleChildVisibility","parentHeight","current","clientHeight","_this$state","ref","lifecycle_methods_Demo1Child","lifecycle_methods_Demo1Parent","showShoppingList","currentHeight","previousHeight","containerRef","toggleShoppingList","LifecycleMethodsPage","lifecycle_methods_Introduction","lifecycle_methods_Demo1","lifecycle_methods_Demo2","PortalsPage","focusOnTextInput","textInputRef","focus","toggleTextInputDisplay","showInput","refCurrentValue","tagName","Demo2Child","inputRef","Demo2Parent","refs_Demo2Child","refs_Demo2Parent","Demo3Child","childTextInput","Demo3Parent","focusOnTextInputThruChildComponentMethod","childComponentRef","refs_Demo3Child","refs_Demo3Parent","RefsPage","refs_Demo1","refs_Demo2","refs_Demo3","App","src_components_AppErrorBoundary","src_components_Header","react_router","exact","path","component","src_components_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92029f79.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => (\n  <header className=\"header\">\n    <h1>React Concepts Demo</h1>\n    <nav className=\"header-nav\">\n      <ul>\n        <li>\n          <Link to=\"/\" className=\"header-nav-link\">Home</Link>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <a href=\"https://github.com/thawkin3/react-concepts-demo\">View it in GitHub</a>\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport './AppErrorBoundary.css';\n\nclass AppErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div className=\"full-page\">\n          <h1>Something went wrong.</h1>\n          <p>This is an error boundary that our app is wrapped in!</p>\n          <p>When an error is caught, this fallback UI is shown.</p>\n          <p>To get back to the normal app, please refresh your page.</p>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default AppErrorBoundary;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\n\nconst HomePage = () => (\n  <main className=\"page home-page\">\n    <h2>Home</h2>\n    <p>This demo app is meant to show off different key pieces of React's functionality, including some of its newest features.</p>\n    <p>Not all of the demos are easily explainable through the UI alone, so please take a look at the <a href=\"https://github.com/thawkin3/react-concepts-demo\">source code in GitHub</a> as well.</p>\n    <nav className=\"home-page-nav\">\n      <h3>Table of Contents</h3>\n      <ul>\n        <li>\n          <Link to=\"/code-splitting\">Code-Splitting</Link>\n        </li>\n        <li>\n          <Link to=\"/context\">Context</Link>\n        </li>\n        <li>\n          <Link to=\"/error-boundaries\">Error Boundaries</Link>\n        </li>\n        <li>\n          <Link to=\"/function-as-child-components\">Function as Child Components</Link>\n        </li>\n        <li>\n          <Link to=\"/higher-order-components\">Higher-Order Components (HOCs)</Link>\n        </li>\n        <li>\n          <Link to=\"/hooks\">Hooks</Link>\n        </li>\n        <li>\n          <Link to=\"/lifecycle-methods\">Lifecycle Methods</Link>\n        </li>\n        <li>\n          <Link to=\"/portals\">Portals</Link>\n        </li>\n        <li>\n          <Link to=\"/refs\">Refs</Link>\n        </li>\n      </ul>\n    </nav>\n  </main>\n);\n\nexport default HomePage;\n","import React, { Suspense, lazy } from 'react';\n\nconst ComponentToLazyLoad = lazy(() => import('./ComponentToLazyLoad'));\n\nconst Demo1 = () => (\n  <div className=\"demo-section code-splitting-demo-1\">\n    <h3>Demo 1 - Suspense and Lazy Loading</h3>\n    <p>When this lazy-loaded content is being fetched, you need to show some fallback UI. In this example, we show the text <span className=\"loading\">\"Loading...\"</span> while the component is being loaded.</p>\n    <p>This component is small, so to see the fallback UI you may want to slow down your internet connection using Chrome's dev tools. To do this, open the developer tools for your browser, click on the Network tab, then click on \"Online\" to show the dropdown menu of different options. Choose \"Slow 3G\", then refresh your page. You should see the fallback content first, and then once the second chunk has been fetched, you'll see the actual component we want to show.</p>\n    <Suspense fallback={<div className=\"loading\">Loading...</div>}>\n      <ComponentToLazyLoad />\n    </Suspense>\n  </div>\n);\n\nexport default Demo1;\n","import React, { Component } from 'react';\n\nclass Demo2 extends Component {\n  static handleDefaultClick() {\n    import('./functionsToDynamicallyImport').then(module => {\n      module.default();\n    });\n  }\n\n  static handleNamedClick() {\n    import('./functionsToDynamicallyImport').then(module => {\n      module.alertAboutNamedExport();\n    });\n  }\n\n  render() {\n    return(\n      <div className=\"demo-section code-splitting-demo-2\">\n        <h3>Demo 2 - Dynamic Imports</h3>\n        <p>Dynamic imports are not currently part of ECMAScript, but it is a stage 3 proposal. Rather than loading all dependencies up front when the module requiring them loads, your module can now only load the imports when they are actually needed or used.</p>\n        <p>In this example, we have two buttons. Each has a click handler that calls another method. Both methods are dynamically imported. The first method is the default export and the second method is a named export. Dynamic imports work with either!</p>\n        <p>Also note that we have a console log from the imported module. This message only gets logged once when the module first loads when you first click either button, but not every time a button is clicked since the module has already been loaded at that point.</p>\n        <button\n          type=\"button\"\n          onClick={Demo2.handleDefaultClick}\n        >\n          Click me for the default export!\n        </button>\n        <button\n          type=\"button\"\n          onClick={Demo2.handleNamedClick}\n        >\n          Click me for the named export!\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Demo2;\n","import React from 'react';\nimport Demo1 from './Demo1';\nimport Demo2 from './Demo2';\nimport './CodeSplitting.css';\n\nconst CodeSplittingPage = () => (\n  <main className=\"page code-splitting-page\">\n    <h2>Code-Splitting</h2>\n    <div className=\"introduction\">\n      <p>Lazy loading allows you to do code-splitting in your app. In other words, rather than loading everything up front, you only load portions of your code when you need it. This helps you reduce bundle sizes and cut down on initial page load time.</p>\n    </div>\n    <hr />\n    <Demo1 />\n    <hr />\n    <Demo2 />\n  </main>\n);\n\nexport default CodeSplittingPage;\n","import React from 'react';\nimport './Context.css';\n\nconst ContextPage = () => (\n  <main className=\"page context-page\">\n    <h2>Context</h2>\n    <p>Coming soon!</p>\n  </main>\n);\n\nexport default ContextPage;\n","import React, { Component } from 'react';\n\nclass Demo1 extends Component {\n  state = { hasError: false };\n\n  throwErrorViaRender = () => {\n    this.setState({ hasError: true });\n  }\n\n  throwErrorViaClickHandlerIncorrectly = () => {\n    throw new Error('I crashed inside a click handler!');\n  }\n\n  throwErrorViaClickHandlerCorrectly = () => {\n    try {\n      throw new Error('I crashed inside a click handler!');\n    } catch (error) {\n      this.setState({ hasError: true });\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      throw new Error('I crashed during the render method!');\n    }\n    return (\n      <div className=\"demo-section error-boundaries-demo-1\">\n        <h3>Demo 1 - Error Boundary Surrounding the Entire App</h3>\n        <p>Here we will intentionally throw an error. Our entire app is wrapped in an error boundary, and we'll show an error message.</p>\n        <p>This button will cause an error in the component's render method, which will then be caught by the error boundary.</p>\n        <button\n          type=\"button\"\n          onClick={this.throwErrorViaRender}\n        >\n          Throw an error through the render method\n        </button>\n        <p>This button will throw an error inside the click handler, but this will NOT be caught by the error boundary. Don't do this!</p>\n        <button\n          type=\"button\"\n          onClick={this.throwErrorViaClickHandlerIncorrectly}\n        >\n          Throw an error through the click handler (incorrect)\n        </button>\n        <p>Instead, you still need to use try/catch blocks to handle errors in your event handlers.</p>\n        <button\n          type=\"button\"\n          onClick={this.throwErrorViaClickHandlerCorrectly}\n        >\n          Throw an error through the click handler (correct)\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Demo1;\n","import React, { Component } from 'react';\nimport './ComponentErrorBoundary.css';\n\nclass ComponentErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      errorInfo: null,\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log('component error boundary did catch')\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div className=\"component-error-boundary\">\n          <h1>Something went wrong.</h1>\n          <p>This is an error boundary that our component is wrapped in!</p>\n          <p>When an error is caught, this fallback UI is shown. But, importantly, the rest of the app did not crash.</p>\n          <p>{this.state.error.toString()}</p>\n          <p className=\"pre-format\">Stack Trace: {this.state.errorInfo.componentStack}</p>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ComponentErrorBoundary;\n","import React, { Component } from 'react';\n\nclass BuggyButton extends Component {\n  state = { hasError: false };\n\n  throwError = () => {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      throw new Error('Component has an error!');\n    }\n\n    return(\n      <button\n        type=\"button\"\n        onClick={this.throwError}\n      >\n        Click me to throw an error\n      </button>\n    );\n  }\n}\n\nexport default BuggyButton;\n","import React, { Component } from 'react';\nimport ComponentErrorBoundary from '../../components/ComponentErrorBoundary';\nimport BuggyButton from './BuggyButton';\n\nclass Demo2 extends Component {\n  render() {\n    return (\n      <div className=\"demo-section error-boundaries-demo-2\">\n        <h3>Demo 2 - Error Boundary Surrounding a Smaller Component</h3>\n        <p>Here we will intentionally throw an error. This button component is wrapped in an error boundary, so a fallback UI will be displayed for just this section if an error is caught.</p>\n        <ComponentErrorBoundary>\n          <BuggyButton />\n        </ComponentErrorBoundary>\n        <p>Here we will also intentionally throw an error. However, this button component is not wrapped in an error boundary, so the error will go all the way up to our main app error boundary.</p>\n        <BuggyButton />\n      </div>\n    );\n  }\n}\n\nexport default Demo2;\n","import React, { Component } from 'react';\n\nclass Demo3 extends Component {\n  state = { counter: 0 };\n\n  componentDidUpdate() {\n    if (this.state.counter === 3) {\n      throw new Error('I crashed inside a lifecycle method!');\n    }\n  }\n\n  incrementCounter = () => {\n    this.setState(prevState => ({ counter: prevState.counter + 1 }));\n  }\n\n  render() {\n    return (\n      <div className=\"demo-section error-boundaries-demo-3\">\n        <h3>Demo 3 - Error Thrown in a Lifecycle Method</h3>\n        <p>In this demo we have a button to increment a counter. We have a <code>componentDidUpdate</code> lifecycle method defined that will throw an error when the counter's value is 3. The error boundary will then catch that error since it occurred in a lifecycle method.</p>\n        <button\n          type=\"button\"\n          onClick={this.incrementCounter}\n        >\n          Increment counter\n        </button>\n        <p>Counter value: {this.state.counter}</p>\n      </div>\n    );\n  }\n}\n\nexport default Demo3;\n","import React, { Component } from 'react';\n\nclass Demo4 extends Component {\n  state = { counter: 0 };\n\n  incrementCounter = () => {\n    this.setState(prevState => ({ counter: prevState.counter + 1 }));\n  }\n\n  render() {\n    if (this.state.counter === 3) {\n      // `map` is an array helper, so calling this on a number will throw an error since numbers don't have a `map` method\n      this.state.counter.map(element => element * 2);\n    }\n    return (\n      <div className=\"demo-section error-boundaries-demo-4\">\n        <h3>Demo 4 - Error Thrown in the Render Method</h3>\n        <p>In this demo we have a button to increment a counter. In our <code>render</code> method, if the counter's value is 3, we'll try to perform a <code>map()</code> function on the number, which isn't valid since this is an array helper method. This is meant to simulate running into an unintentional error during the component's render method. It's import to always code defensively, but when errors do happen, it's nice to have an error boundary to catch them!</p>\n        <button\n          type=\"button\"\n          onClick={this.incrementCounter}\n        >\n          Increment counter\n        </button>\n        <p>Counter value: {this.state.counter}</p>\n      </div>\n    );\n  }\n}\n\nexport default Demo4;\n","import React, { Component } from 'react';\n\nclass BuggyConstructor extends Component {\n  constructor(props) {\n    super(props);\n    // Buggy code to intentionally throw an error (numbers don't have a `map` method)\n    const someNumber = 3;\n    someNumber.map(element => element * 2);\n  }\n\n  render() {\n    return(\n      <div>I'm a component with a buggy constructor that throws errors!</div>\n    );\n  }\n}\n\nexport default BuggyConstructor;\n","import React, { Component } from 'react';\nimport BuggyConstructor from './BuggyConstructor';\n\nclass Demo5 extends Component {\n  state = { showChild: false };\n\n  toggleShowChild = () => {\n    this.setState(prevState => ({ showChild: !prevState.showChild }));\n  }\n\n  render() {\n    return (\n      <div className=\"demo-section error-boundaries-demo-5\">\n        <h3>Demo 5 - Error Thrown in the Constructor</h3>\n        <p>In this demo we have a button to show a child component. This child component has a constructor with bad code in it that will throw an error when called. When the button is clicked, the child component will begin mounting, which will call the constructor, which will then throw an error which is caught by our error boundary.</p>\n        <button\n          type=\"button\"\n          onClick={this.toggleShowChild}\n        >\n          {this.state.showChild ? 'Hide Child' : 'Show Child'}\n        </button>\n        {this.state.showChild && <BuggyConstructor />}\n      </div>\n    );\n  }\n}\n\nexport default Demo5;\n","import React from 'react';\nimport Demo1 from './Demo1';\nimport Demo2 from './Demo2';\nimport Demo3 from './Demo3';\nimport Demo4 from './Demo4';\nimport Demo5 from './Demo5';\nimport './ErrorBoundaries.css';\n\nconst ErrorBoundariesPage = () => (\n  <main className=\"page error-boundaries-page\">\n    <h2>Error Boundaries</h2>\n    <div className=\"introduction\">\n      <p>Error boundaries are a useful tool for ensuring that your entire app doesn't break if a component runs into an error. Error boundaries catch errors during rendering, in lifecycle methods, and in constructors of the whole tree below them. If any errors are caught, you can then show a fallback UI.</p>\n    </div>\n    <hr />\n    <Demo1 />\n    <hr />\n    <Demo2 />\n    <hr />\n    <Demo3 />\n    <hr />\n    <Demo4 />\n    <hr />\n    <Demo5 />\n  </main>\n);\n\nexport default ErrorBoundariesPage;\n","import React from 'react';\nimport './FunctionAsChildComponents.css';\n\nconst FunctionAsChildComponentsPage = () => (\n  <main className=\"page function-as-child-components-page\">\n    <h2>Function as Child Components</h2>\n    <p>Coming soon!</p>\n  </main>\n);\n\nexport default FunctionAsChildComponentsPage;\n","import React from 'react';\n\nconst Button = ({ buttonText, clickHandler, buttonType, additionalClasses }) => (\n  <button\n    type={buttonType || 'button'}\n    onClick={clickHandler}\n    className={`btn ${additionalClasses || ''}`}\n  >\n    {buttonText}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\n\nconst CounterResults = ({ counterValue }) => (\n  <p>Counter value: {counterValue}</p>\n);\n\nexport default CounterResults;\n","function getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nexport default getDisplayName;\n","import React, { Component } from 'react';\nimport getDisplayName from '../../util/getDisplayName';\n\nfunction logUpdates(WrappedComponent) {\n  class LogUpdates extends Component {\n    componentDidUpdate(prevProps, prevState) {\n      console.log('Previous props:', prevProps, 'Current props:', this.props);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  LogUpdates.displayName = `LogUpdates(${getDisplayName(WrappedComponent)})`;\n\n  return LogUpdates;\n}\n\nexport default logUpdates;\n","import React, { Component } from 'react';\nimport Button from './Button';\nimport CounterResults from './CounterResults';\nimport logUpdates from './logUpdates';\n\nconst WrappedCounterResults = logUpdates(CounterResults);\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { counterValue: 0 };\n    this.incrementCounter = this.incrementCounter.bind(this);\n  }\n\n  incrementCounter() {\n    this.setState(prevState => ({ counterValue: prevState.counterValue + 1 }));\n  }\n\n  render() {\n    const { useHOC } = this.props;\n    const { counterValue } = this.state;\n    return (\n      <div className=\"counter\">\n        <Button\n          buttonText=\"Increment counter\"\n          clickHandler={this.incrementCounter}\n        />\n        {useHOC ? (\n          <WrappedCounterResults counterValue={counterValue} />\n        ) : (\n          <CounterResults counterValue={counterValue} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","import React from 'react';\nimport Counter from './Counter';\n\nconst Demo1 = () => (\n  <div className=\"demo-section higher-order-components-demo-1\">\n    <h3>Demo 1 - HOC That Logs Component Updates</h3>\n    <p>We've defined an HOC called <code>logUpdates</code> that simply wraps its input component and logs information to the console during the <code>componentDidUpdate</code> lifecycle method when the new wrapped component updates. On this page we have two simple counter components. The first component is just the counter component by itself, and the second component is the counter component that has its results component wrapped in our <code>logUpdates</code> HOC.</p>\n    <p>Open up your browser's developer tools and look in the JavaScript Console to see that the second component creates console logs when the button is clicked but that the first component does not.</p>\n    <h4>Unwrapped counter results (no console logs)</h4>\n    <Counter />\n    <h4>Wrapped counter results (console logs)</h4>\n    <Counter useHOC />\n  </div>\n);\n\nexport default Demo1;\n","import React, { Component } from 'react';\nimport ColoredText from './ColoredText';\nimport logUpdates from './logUpdates';\n\nconst WrappedColoredText = logUpdates(ColoredText);\n\nclass Demo2a extends Component {\n  state = { textColor: 'red' };\n\n  handleTextInputChange = (e) => {\n    this.setState({ textColor: e.target.value });\n  }\n\n  render() {\n    const { textColor } = this.state;\n\n    return (\n      <div>\n        <label htmlFor=\"textColorInput\">Text Color:</label>\n        <input\n          type=\"text\"\n          id=\"textColorInput\"\n          value={textColor}\n          onChange={this.handleTextInputChange}\n        />\n        <WrappedColoredText textColor={textColor} />\n      </div>\n    );\n  }\n}\n\nexport default Demo2a;\n","import React from 'react';\n\nconst ColoredText = ({ textColor }) => (\n  <p>My text is <span style={{ color: textColor }}>{textColor}</span></p>\n);\n\nexport default ColoredText;\n","import React, { Component } from 'react';\nimport Button from './Button';\nimport logUpdates from './logUpdates';\n\nconst WrappedButton = logUpdates(Button);\n\nclass Demo2b extends Component {\n  state = { buttonIsOn: false };\n\n  toggleValue = () => {\n    this.setState(prevState => ({ buttonIsOn: prevState.buttonIsOn + 1 }));\n  }\n\n  render() {\n    const { buttonIsOn } = this.state;\n\n    return (\n      <div>\n        <p>Toggled value is: {buttonIsOn ? 'On' : 'Off'}</p>\n        <WrappedButton\n          buttonText={buttonIsOn ? 'Turn Off' : 'Turn On'}\n          clickHandler={this.toggleValue}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Demo2b;\n","import React from 'react';\nimport Demo2a from './Demo2a';\nimport Demo2b from './Demo2b';\n\nconst Demo2 = () => (\n  <div className=\"demo-section higher-order-components-demo-2\">\n    <h3>Demo 2 - HOC for Cross-Cutting Concerns</h3>\n    <p>The nice thing about HOCs is that you can use the same HOC with different input components. For example, you can use Redux's <code>connect</code> method to wrap any component you want.</p>\n    <p>Here we have two different types of components that are both wrapped in our <code>logUpdates</code> HOC. The two components do different things, but both are wrapped in the console logging functionality. The first component receives a prop for the text color based on the value of the text input above it. The second component is a button that receives props for the button text and the click handler. The button text prop changes to reflect whether the toggle value is On or Off.</p>\n    <Demo2a />\n    <Demo2b />\n  </div>\n);\n\nexport default Demo2;\n","import React from 'react';\nimport Button from './Button';\n\nconst BoringComponent = (props) => (\n  <div className=\"add-border\">\n    <p>This is <b>{props.secretToLife ? 'an exciting' : 'a boring'}</b> component.</p>\n    <p>The secret to life is: {props.secretToLife || '???'}</p>\n    {props.sendAlert && (\n      <Button buttonText=\"Send alert\" clickHandler={props.sendAlert} />\n    )}\n    {props.counter != null && props.incrementCounter && (\n      <div>\n        <Button buttonText=\"Increment counter\" clickHandler={props.incrementCounter} />\n        <p>Counter value: {props.counter}</p>\n      </div>\n    )}\n  </div>\n);\n\nexport default BoringComponent;\n","import React, { Component } from 'react';\nimport getDisplayName from '../../util/getDisplayName';\n\nfunction withAddedProps(WrappedComponent) {\n  class WithAddedProps extends Component {\n    state = { counter: 0 };\n\n    incrementCounter = () => {\n      this.setState(prevState => ({ counter: prevState.counter + 1 }));\n    }\n\n    static sendAlert = () => {\n      window.alert('Alert from the withAddedProps HOC!');\n    }\n\n    render() {\n      return (\n        <WrappedComponent\n          {...this.props}\n          secretToLife={42}\n          counter={this.state.counter}\n          incrementCounter={this.incrementCounter}\n          sendAlert={WithAddedProps.sendAlert}\n        />\n      );\n    }\n  }\n\n  WithAddedProps.displayName = `WithAddedProps(${getDisplayName(WrappedComponent)})`;\n\n  return WithAddedProps;\n}\n\nexport default withAddedProps;\n","import React from 'react';\nimport BoringComponent from './BoringComponent';\nimport withAddedProps from './withAddedProps';\n\nconst WrappedBoringComponent = withAddedProps(BoringComponent);\n\nconst Demo3 = () => (\n  <div className=\"demo-section higher-order-components-demo-3\">\n    <h3>Demo 3 - HOC to Add Additional Props</h3>\n      <p>This example adds additional props to the wrapped component. These props can be anything you want, like values, class methods, or static methods. In this case, the <code>withAddedProps</code> HOC adds props for <code>secretToLife</code>, <code>counter</code>, <code>incrementCounter()</code>, and <code>sendAlert()</code>.</p>\n      <h4>Unwrapped component (no added props)</h4>\n      <BoringComponent />\n      <h4>Wrapped component (has added props)</h4>\n      <WrappedBoringComponent />\n  </div>\n);\n\nexport default Demo3;\n","import React from 'react';\nimport Demo1 from './Demo1';\nimport Demo2 from './Demo2';\nimport Demo3 from './Demo3';\nimport './HigherOrderComponents.css';\n\nconst HigherOrderComponentsPage = () => (\n  <main className=\"page higher-order-components-page\">\n    <h2>Higher-Order Components (HOCs)</h2>\n    <div className=\"introduction\">\n      <p>A higher-order component is a function that takes a component and returns a new component. HOCs are an advanced technique in React for reusing component logic. Redux's <code>connect</code> and React Router's <code>withRouter</code> are two great examples of common HOCs that we use all the time.</p>\n      <p>HOCs should not mutate the input component they receive. They should return a new component.</p>\n      <p>The input component's props should be passed through so that you don't lose anything.</p>\n      <p>The HOC should wrap the input component's <code>displayName</code> for easy debugging. Redux's <code>connect</code> is a great example of this. If you have a <code>Button</code> component that you then use with <code>connect</code>, the resulting wrapped component gets a <code>displayName</code> of <code>Connect(Button)</code>.</p>\n      <p>One caveat for HOCs is that static methods on the input component don't get automatically included on the wrapped component. <code>hoist-non-react-statics</code> is a great package that can help solve this problem.</p>\n      <p>A second caveat with HOCs is that refs don't get passed through since refs are not props. The solution for this problem is to use the <code>React.forwardRef</code> API.</p>\n    </div>\n    <hr />\n    <Demo1 />\n    <hr />\n    <Demo2 />\n    <hr />\n    <Demo3 />\n  </main>\n);\n\nexport default HigherOrderComponentsPage;\n","import React, { useState } from 'react'\n\nconst Demo1 = () => {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n  const [name, setName] = useState('');\n\n  return (\n    <div className=\"demo-section hooks-demo-1\">\n      <h3>Demo 1 - The State Hook</h3>\n      <p>The state hook is used by importing <code>useState</code> from React. The <code>useState</code> method returns an array of two elements: the first is the state variable, and the second is the function that updates it.</p>\n      <p>Counter value: {count}</p>\n      <button type=\"button\" onClick={() => setCount(prevCount => prevCount + 1)}>\n        Increment counter\n      </button>\n      <button type=\"button\" onClick={() => setCount(prevCount => prevCount - 1)}>\n        Decrement counter\n      </button>\n      <button type=\"button\" onClick={() => setCount(0)}>\n        Reset counter\n      </button>\n      <p>Your name is: {name}</p>\n      <input type=\"text\" onChange={e => setName(e.target.value)}/>\n    </div>\n  );\n}\n\nexport default Demo1;\n","import React, { useState, useEffect } from 'react'\n\nconst Demo2 = () => {\n  const [count, setCount] = useState(0);\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`;\n\n    // If you return a function, that gets run when the component unmounts, so similar to componentWillUnmount:\n    return (() => {\n      document.title = 'React Concepts';\n    });\n  });\n\n  return (\n    <div className=\"demo-section hooks-demo-2\">\n      <h3>Demo 2 - The Effect Hook</h3>\n      <p>The effect hook is used by importing <code>useEffect</code> from React. The <code>useEffect</code> method allows you to write a function that gets run when the component mounts and when it updates.</p>\n      <p>If your effect function returns a function, that function gets called when the component unmounts. This is where you do any needed cleanup.</p>\n      <p>Click the button below, and then check the page's title shown in the browser tab to see it get updated.</p>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(prevCount => prevCount + 1)}>\n        Click to increment counter\n      </button>\n    </div>\n  );\n}\n\nexport default Demo2;\n","import React, { useEffect } from 'react'\n\nconst Demo3 = () => {\n  useEffect(() => {\n    console.log('Effect was run, and the interval has started running');\n    const myInterval = setInterval(() => console.log('Interval is running'), 500);\n    // If you return a function, that gets run when the component unmounts, so similar to componentWillUnmount:\n    return (() => {\n      clearInterval(myInterval);\n      console.log('Effect cleanup was run, and the interval has been cleared');\n    });\n  });\n\n  return (\n    <div className=\"demo-section hooks-demo-3\">\n      <h3>Demo 3 - The Effect Hook and Cleanup</h3>\n      <p>This effect sets up an interval to console log every 500ms. Open up your browser's JavaScript console to see the logs.</p>\n      <p>Navigate away from this page using the Home button at the top-right of your screen.</p>\n      <p>This component will unmount, and the cleanup will be performed so that the interval is cleared and no longer console logs.</p>\n    </div>\n  );\n}\n\nexport default Demo3;\n","import React, { useReducer } from 'react'\n\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  favoriteColor: '',\n};\n\nfunction registrationReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'setFirstName':\n      return { ...state, firstName: action.payload };\n    case 'setLastName':\n      return { ...state, lastName: action.payload };\n    case 'setFavoriteColor':\n      return { ...state, favoriteColor: action.payload };\n    default:\n      return state;\n  }\n}\n\nconst Demo4 = () => {\n  const [state, dispatch] = useReducer(registrationReducer, initialState);\n\n  return (\n    <div className=\"demo-section hooks-demo-4\">\n      <h3>Demo 4 - The Reducer Hook</h3>\n      <p>The reducer hook is used by importing <code>useReducer</code> from React. The <code>useReducer</code> method takes a reducer and the intial state as arguments and then returns an array of two elements: the first is the state variable, and the second is the dispatch function.</p>\n      <p>The reducer hook lets you write code that is very similar to how things work in Redux.</p>\n      <div className=\"state-data\">\n        <h4>State Data:</h4>\n        <div className=\"left-indent\">First Name: {state.firstName}</div>\n        <div className=\"left-indent\">Last Name: {state.lastName}</div>\n        <div className=\"left-indent\">Favorite Color: {state.favoriteColor}</div>\n      </div>\n      <form id=\"useReducerForm\" onSubmit={e => e.preventDefault()}>\n        <label htmlFor=\"firstName4\">First Name</label>\n        <input\n          type=\"text\"\n          id=\"firstName4\"\n          value={state.firstName}\n          onChange={e => dispatch({ type: 'setFirstName', payload: e.target.value })}\n        />\n        <label htmlFor=\"lastName4\">Last Name</label>\n        <input\n          type=\"text\"\n          id=\"lastName4\"\n          value={state.lastName}\n          onChange={e => dispatch({ type: 'setLastName', payload: e.target.value })}\n        />\n        <label htmlFor=\"favoriteColor4\">Favorite Color</label>\n        <select\n          id=\"favoriteColor4\"\n          value={state.favoriteColor}\n          onChange={e => dispatch({ type: 'setFavoriteColor', payload: e.target.value })}\n        >\n          <option value=\"\" disabled>Please select</option>\n          <option value=\"Red\">Red</option>\n          <option value=\"Blue\">Blue</option>\n          <option value=\"Green\">Green</option>\n          <option value=\"Yellow\">Yellow</option>\n        </select>\n      </form>\n    </div>\n  );\n}\n\nexport default Demo4;\n","import React from 'react';\nimport Demo1 from './Demo1';\nimport Demo2 from './Demo2';\nimport Demo3 from './Demo3';\nimport Demo4 from './Demo4';\nimport './Hooks.css';\n\nconst HooksPage = () => (\n  <main className=\"page hooks-page\">\n    <h2>Hooks</h2>\n    <div className=\"introduction\">\n      <p>Hooks are pretty cool! They let you use state and other React features in functional components, so you no longer need to define a class component if you don't want to.</p>\n    </div>\n    <hr/>\n    <Demo1/>\n    <hr/>\n    <Demo2/>\n    <hr/>\n    <Demo3/>\n    <hr/>\n    <Demo4/>\n  </main>\n);\n\nexport default HooksPage;\n","import React from 'react';\n\nconst Introduction = () => (\n  <div className=\"introduction\">\n    <h3>Mounting</h3>\n    <p>When a component is being created and inserted into the DOM, the following lifecycle methods are called in this order:</p>\n    <ol>\n      <li><b>constructor()</b> - Initialize state and bind methods here. Don't forget to call <code>super(props)</code>. Don't cause any side effects here.</li>\n      <li><b>getDerivedStateFromProps()</b> - Create a new state based on the new props and previous state. Don't cause any side effects here.</li>\n      <li><b>render()</b> - Render your component (write your JSX here). Don't cause any side effects here.</li>\n      <li><b>componentDidMount()</b> - Set up subscriptions, intervals, timeouts, event listeners, or make API requests here.</li>\n    </ol>\n    <h3>Updating</h3>\n    <p>When a component is updating and being re-rendered due to a change in state or props, the following lifecycle methods are called in this order:</p>\n    <ol>\n      <li><b>getDerivedStateFromProps()</b> - Create a new state based on the new props and previous state. Don't cause any side effects here.</li>\n      <li><b>shouldComponentUpdate()</b> - Return <code>true</code> to update or <code>false</code> to not update. Defaults to <code>true</code>. In general, you shouldn't use this method and just let React decide when the component needs to update.</li>\n      <li><b>render()</b> - Render your component (write your JSX here). Don't cause any side effects here.</li>\n      <li><b>getSnapshotBeforeUpdate()</b> - Capture information about the DOM just before the new content is rendered on the screen. This is generally good for getting things like elements heights or positions if you need to auto-scroll somewhere after the component updates.</li>\n      <li><b>componentDidUpdate()</b> - Make API requests here if you need to. In general, you'll want to wrap any code here in an if statement so that the code only runs when certain pieces of props or state change, not just any time the component updates.</li>\n    </ol>\n    <h3>Unmounting</h3>\n    <p>When a component is being removed from the DOM, the following lifecycle methods are called in this order:</p>\n    <ol>\n      <li><b>componentWillUnmount()</b> - Do clean-up here. Cancel any subscriptions, intervals, timeouts, event listeners, or pending API requests.</li>\n    </ol>\n  </div>\n);\n\nexport default Introduction;\n","import React, { Component } from 'react';\n\nclass Demo1Child extends Component {\n  constructor(props) {\n    console.log('Demo1 Child constructor');\n    super(props);\n\n    this.state = { counter: 0 };\n\n    this.incrementCounter = this.incrementCounter.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    console.log('Demo1 Child getDerivedStateFromProps', 'nextProps:', nextProps, 'prevState:', prevState);\n    return null;\n  }\n\n  componentDidMount() {\n    console.log('Demo1 Child componentDidMount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('Demo1 Child shouldComponentUpdate', 'nextProps:', nextProps, 'nextState:', nextState);\n    return true\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log('Demo1 Child getSnapshotBeforeUpdate', 'prevProps:', prevProps, 'prevState:', prevState);\n    return { timestamp: (new Date()).getMilliseconds() };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(\n      'Demo1 Child componentDidUpdate',\n      'prevProps:', prevProps, 'props:', this.props,\n      'prevState:', prevState, 'state:', this.state,\n      'snapshot:', snapshot, 'new timestamp:', { timestamp: (new Date()).getMilliseconds() },\n    );\n  }\n\n  componentWillUnmount() {\n    console.log('Demo1 Child componentWillUnmount');\n  }\n\n  incrementCounter() {\n    this.setState(prevState => ({ counter: prevState.counter + 1 }));\n  }\n\n  render() {\n    console.log('Demo1 Child render');\n    const { textColor } = this.props;\n    const { counter } = this.state;\n    return (\n      <div className=\"demo1-child\">\n        <p>I'm a child component. I accept props for the text color of the following text:</p>\n        <p style={{ color: textColor }}>Watch my color change!</p>\n        <button\n          type=\"button\"\n          onClick={this.incrementCounter}\n        >\n          Increment counter\n        </button>\n        <p>Counter value: {counter}</p>\n      </div>\n    );\n  }\n}\n\nexport default Demo1Child;\n","import React, { Component, createRef } from 'react';\nimport Demo1Child from './Demo1Child';\n\nclass Demo1Parent extends Component {\n  constructor(props) {\n    console.log('Demo1 Parent constructor');\n    super(props);\n\n    this.state = {\n      showChild: true,\n      textColor: '#000',\n    };\n\n    this.parentContainerRef = createRef();\n\n    this.toggleChildVisibility = this.toggleChildVisibility.bind(this);\n    this.handleTextInputChange = this.handleTextInputChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    console.log('Demo1 Parent getDerivedStateFromProps', 'nextProps:', nextProps, 'prevState:', prevState);\n    return null;\n  }\n\n  componentDidMount() {\n    console.log('Demo1 Parent componentDidMount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('Demo1 Parent shouldComponentUpdate', 'nextProps:', nextProps, 'nextState:', nextState);\n    return true\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log('Demo1 Parent getSnapshotBeforeUpdate', 'prevProps:', prevProps, 'prevState:', prevState);\n    return { parentHeight: this.parentContainerRef.current && this.parentContainerRef.current.clientHeight };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(\n      'Demo1 Parent componentDidUpdate',\n      'prevProps:', prevProps,\n      'props:', this.props,\n      'prevState:', prevState,\n      'state:', this.state,\n      'snapshot:', snapshot, 'new parentHeight:', { parentHeight: this.parentContainerRef.current && this.parentContainerRef.current.clientHeight },\n    );\n  }\n\n  componentWillUnmount() {\n    console.log('Demo1 Parent componentWillUnmount');\n  }\n\n  toggleChildVisibility() {\n    this.setState(prevState => ({ showChild: !prevState.showChild }));\n  }\n\n  handleTextInputChange(e) {\n    this.setState({ textColor: e.target.value });\n  }\n\n  render() {\n    console.log('Demo1 Parent render');\n    const { showChild, textColor } = this.state;\n    return (\n      <div className=\"demo1-parent\" ref={this.parentContainerRef}>\n        <p>I'm the parent component. I have state for whether or not to show the child component and what color the child component's text should be.</p>\n        <button\n          type=\"button\"\n          onClick={this.toggleChildVisibility}\n        >\n          Toggle child visibility\n        </button>\n        <label htmlFor=\"textColorInput\">Text color:</label>\n        <input\n          type=\"text\"\n          id=\"textColorInput\"\n          value={textColor}\n          onChange={this.handleTextInputChange}\n        />\n        {showChild && <Demo1Child textColor={textColor} />}\n      </div>\n    );\n  }\n}\n\nexport default Demo1Parent;\n","import React from 'react';\nimport Demo1Parent from './Demo1Parent';\n\nconst Demo1 = () => (\n  <div className=\"demo-section lifecycle-methods-demo-1\">\n    <h3>Demo 1 - Console Log the Lifecycle Methods</h3>\n    <p>Here we render a parent component and a child component. Each of them have lifecycle methods implemented that console log when they are called as well as any data associated with them.</p>\n    <p>The parent component has a text input in which you can enter a color value. This value is stored in the parent's state and passed down to the child component as a prop. The parent component also has a button to show or hide the child component so that the child component can be mounted and unmounted repeatedly.</p>\n    <p>The child component accepts the text color prop and renders some text in that color. It also has a button to increment a counter, and that counter value is stored in its state.</p>\n    <Demo1Parent />\n  </div>\n);\n\nexport default Demo1;\n","import React, { Component, createRef } from 'react';\n\nclass Demo2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showShoppingList: true,\n      currentHeight: null,\n      previousHeight: null,\n    };\n\n    this.containerRef = createRef();\n\n    this.toggleShoppingList = this.toggleShoppingList.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ currentHeight: this.containerRef.current && this.containerRef.current.clientHeight });\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    return { previousHeight: this.containerRef.current && this.containerRef.current.clientHeight };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.showShoppingList !== this.state.showShoppingList) {\n      this.setState({\n        currentHeight: this.containerRef.current && this.containerRef.current.clientHeight,\n        previousHeight: snapshot.previousHeight,\n      });\n    }\n  }\n\n  toggleShoppingList() {\n    this.setState(prevState => ({ showShoppingList: !prevState.showShoppingList }));\n  }\n\n  render() {\n    const { showShoppingList, currentHeight, previousHeight } = this.state;\n\n    return (\n      <div className=\"demo-section lifecycle-methods-demo-2\">\n        <h3>Demo 2 - getSnapshotBeforeUpdate</h3>\n        <p>This lifecycle method is great for capturing DOM information right before the component renders, so you can compare before and after values. In this example, we'll see the captured value of the container's height before and after the component updates.</p>\n        <div className=\"bigger-container\" ref={this.containerRef}>\n          <p><b>Main Container Current Height:</b> {currentHeight ? `${currentHeight}px` : 'N/A'}</p>\n          <p><b>Main Container Previous Height:</b> {previousHeight ? `${previousHeight}px` : 'N/A'}</p>\n          <p>This is the main container. It has some children that we'll toggle showing and hiding.</p>\n          <button\n            type=\"button\"\n            onClick={this.toggleShoppingList}\n          >\n            Toggle shopping list visibility\n          </button>\n          {showShoppingList && (\n            <div className=\"smaller-container\">\n              <p>Shopping List</p>\n              <ul>\n                <li>Bread</li>\n                <li>Milk</li>\n                <li>Eggs</li>\n              </ul>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Demo2;\n","import React from 'react';\nimport Introduction from './Introduction';\nimport Demo1 from './Demo1';\nimport Demo2 from './Demo2';\nimport './LifecycleMethods.css';\n\nconst LifecycleMethodsPage = () => (\n  <main className=\"page lifecycle-methods-page\">\n    <h2>Lifecycle Methods</h2>\n    <p>Lifecycle methods are methods that you can tie into to run code at certain points while your component is mounting, updating, or unmounting. Understanding when each method runs and what it's best used for is crucial to writing clean components.</p>\n    <Introduction />\n    <hr />\n    <Demo1 />\n    <hr />\n    <Demo2 />\n  </main>\n);\n\nexport default LifecycleMethodsPage;\n","import React from 'react';\nimport './Portals.css';\n\nconst PortalsPage = () => (\n  <main className=\"page portals-page\">\n    <h2>Portals</h2>\n    <p>Coming soon!</p>\n  </main>\n);\n\nexport default PortalsPage;\n","import React, { Component, Fragment, createRef } from 'react';\n\nclass Demo1 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showInput: true,\n      refCurrentValue: null,\n    };\n\n    this.textInputRef = createRef();\n  }\n\n  componentDidMount() {\n    this.setState({ refCurrentValue: this.textInputRef.current });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.textInputRef.current !== this.state.refCurrentValue) {\n      this.setState({ refCurrentValue: this.textInputRef.current });\n    }\n  }\n\n  focusOnTextInput = () => {\n    this.textInputRef.current && this.textInputRef.current.focus();\n  }\n\n  toggleTextInputDisplay = () => {\n    this.setState(prevState => ({ showInput: !prevState.showInput }));\n  }\n\n  render() {\n    return (\n      <div className=\"demo-section refs-demo-1\">\n        <h3>Demo 1 - Adding a Ref to a DOM Element (Then Focusing an Input Element)</h3>\n        <p>Here the ref is created and used inside the same component.</p>\n        {this.state.showInput && (\n          <Fragment>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              ref={this.textInputRef}\n            />\n          </Fragment>\n        )}\n        <p>The current ref value is: {this.state.refCurrentValue ? this.state.refCurrentValue.tagName : 'null'}</p>\n        <button\n          type=\"button\"\n          onClick={this.focusOnTextInput}\n        >\n          Focus on the input\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.toggleTextInputDisplay}\n        >\n          Toggle the input display\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Demo1;\n","import React, { Component } from 'react';\n\nclass Demo2Child extends Component {\n  render() {\n    return (\n      <div>\n        <h4>Child Component with a Text Input</h4>\n          <label htmlFor=\"firstName\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"firstName\"\n            ref={this.props.inputRef}\n          />\n      </div>\n    );\n  }\n}\n\nexport default Demo2Child;\n","import React, { Component, createRef } from 'react';\nimport Demo2Child from './Demo2Child';\n\nclass Demo2Parent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.textInputRef = createRef();\n  }\n\n  focusOnTextInput = () => {\n    this.textInputRef.current && this.textInputRef.current.focus();\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>Parent Component with a Button</h4>\n        <button\n          type=\"button\"\n          onClick={this.focusOnTextInput}\n        >\n          Focus on the input\n        </button>\n        <Demo2Child inputRef={this.textInputRef} />\n      </div>\n    );\n  }\n}\n\nexport default Demo2Parent;\n","import React from 'react';\nimport Demo2Parent from './Demo2Parent';\n\nconst Demo2 = () => (\n  <div className=\"demo-section refs-demo-2\">\n    <h3>Demo 2 - Adding a Ref to a Class Component as a Custom Prop (Then Focusing an Input Element)</h3>\n    <p>Here the ref is created in the parent component and passed down to the child component as a custom prop.</p>\n    <p>The child component places the ref on the text input, and the parent component calls focus() directly on the text input.</p>\n    <Demo2Parent />\n  </div>\n);\n\nexport default Demo2;\n","import React, { Component, createRef } from 'react';\n\nclass Demo3Child extends Component {\n  childTextInput = createRef();\n\n  focusOnTextInput = () => {\n    this.childTextInput.current && this.childTextInput.current.focus();\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>Child Component with a Text Input</h4>\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"lastName\"\n            ref={this.childTextInput}\n          />\n          <br />\n          <button\n            type=\"button\"\n            onClick={this.focusOnTextInput}\n          >\n            Focus on the input from the child component\n          </button>\n      </div>\n    );\n  }\n}\n\nexport default Demo3Child;\n","import React, { Component, createRef } from 'react';\nimport Demo3Child from './Demo3Child';\n\nclass Demo3Parent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.childComponentRef = createRef();\n  }\n\n  focusOnTextInputThruChildComponentMethod = () => {\n    this.childComponentRef.current && this.childComponentRef.current.focusOnTextInput();\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>Parent Component with a Button</h4>\n        <button\n          type=\"button\"\n          onClick={this.focusOnTextInputThruChildComponentMethod}\n        >\n          Focus on the input from the parent component\n        </button>\n        <Demo3Child ref={this.childComponentRef} />\n      </div>\n    );\n  }\n}\n\nexport default Demo3Parent;\n","import React from 'react';\nimport Demo3Parent from './Demo3Parent';\n\nconst Demo3 = () => (\n  <div className=\"demo-section refs-demo-3\">\n    <h3>Demo 3 - Adding a Ref to a Class Component as an Actual Ref (Then Focusing an Input Element)</h3>\n    <p>Here the ref is created in the parent component and placed directly on the child component.</p>\n    <p>So in this case, the ref refers not to the text input, but to the entire child component instance.</p>\n    <p>The child component also creates its own ref on the text input and defines a method to focus on the text input.</p>\n    <p>Now the child can use its own method to focus on the text input, and the parent can also access the child's method which then focuses on the text input.</p>\n    <Demo3Parent />\n  </div>\n);\n\nexport default Demo3;\n","import React from 'react';\nimport Demo1 from './Demo1';\nimport Demo2 from './Demo2';\nimport Demo3 from './Demo3';\nimport './Refs.css';\n\nconst RefsPage = () => (\n  <main className=\"page refs-page\">\n    <h2>Refs</h2>\n    <div className=\"introduction\">\n      <p>Refs are used for accessing DOM nodes directly. They should be used sparingly, but they're good for things like programmatically shifting focus to an element.</p>\n      <p>When trying to call methods on a ref, it's always a good idea to check that the ref is not null first to avoid errors.</p>\n    </div>\n    <hr />\n    <Demo1 />\n    <hr />\n    <Demo2 />\n    <hr />\n    <Demo3 />\n  </main>\n);\n\nexport default RefsPage;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport AppErrorBoundary from './components/AppErrorBoundary';\nimport HomePage from './pages/home/Home';\nimport CodeSplittingPage from './pages/code-splitting/CodeSplitting';\nimport ContextPage from './pages/context/Context';\nimport ErrorBoundariesPage from './pages/error-boundaries/ErrorBoundaries';\nimport FunctionAsChildComponentsPage from './pages/function-as-child-components/FunctionAsChildComponents';\nimport HigherOrderComponentsPage from './pages/higher-order-components/HigherOrderComponents';\nimport HooksPage from './pages/hooks/Hooks';\nimport LifecycleMethodsPage from './pages/lifecycle-methods/LifecycleMethods';\nimport PortalsPage from './pages/portals/Portals';\nimport RefsPage from './pages/refs/Refs';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <AppErrorBoundary>\n        <div className=\"app\">\n          <Router>\n            <Header />\n            <Switch>\n              <Route exact path=\"/\" component={HomePage} />\n              <Route path=\"/code-splitting\" component={CodeSplittingPage} />\n              <Route path=\"/context\" component={ContextPage} />\n              <Route path=\"/error-boundaries\" component={ErrorBoundariesPage} />\n              <Route path=\"/function-as-child-components\" component={FunctionAsChildComponentsPage} />\n              <Route path=\"/higher-order-components\" component={HigherOrderComponentsPage} />\n              <Route path=\"/hooks\" component={HooksPage} />\n              <Route path=\"/lifecycle-methods\" component={LifecycleMethodsPage} />\n              <Route path=\"/portals\" component={PortalsPage} />\n              <Route path=\"/refs\" component={RefsPage} />\n              <Redirect to=\"/\" />\n            </Switch>\n            <Footer />\n          </Router>\n        </div>\n      </AppErrorBoundary>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}